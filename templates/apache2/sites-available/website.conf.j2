# {{ ansible_managed }}

Define DOMAIN {{ website_domain }}
{% if website_webalias is defined %}
Define DOMAINALIAS {{ website_webalias }}
{% endif %}{# website_webalias is defined #}

<VirtualHost *:80>
    ServerName ${DOMAIN}
{% if website_webalias is defined %}
    ServerAlias ${DOMAINALIAS}
{% endif %}{# website_webalias is defined #}
    ServerAdmin  {{ website_serveradmin|default('webmaster@localhost') }}
{% if website_httpsonly %}
    RedirectMatch permanent ^(?!/\.well-known/acme-challenge/).* https://${DOMAIN}$0
{% else %}
{% if website_rootredirection is defined %}
    RedirectMatch permanent ^(?!/\.well-known/acme-challenge/).* {{ website_rootredirection }}$0
{% else %}
    DocumentRoot {{ website_documentroot_base|default('/var/www/html') }}/${DOMAIN}

    <Directorymatch "^/.*/\.git+/">
      Order deny,allow
      Deny from all
    </Directorymatch>
    <Files ~ "^\.git">
      Order allow,deny
      Deny from all
    </Files>

{% endif %}{# website_rootredirection is defined #}
{% if website_scriptalias_url is defined %}
    ScriptAlias "/{{ website_scriptalias_url }}" "{{ website_documentroot_base|default('/var/www/html') }}/${DOMAIN}/{{ website_scriptalias_path|default(website_scriptalias_url) }}"
{% endif %}{# website_scriptalias_url #}
{% if website_proxy is defined %}
    ProxyRequests     Off
    ProxyPreserveHost On
    AllowEncodedSlashes {{ website_encoded_slashes|default('Off') }}
    <Proxy *>
      Order deny,allow
      Allow from all
    </Proxy>
    ProxyPass /.well-known !
    ProxyPass / "{{ website_proxy }}"
{% if website_proxyreverse is defined %}
    ProxyPassReverse / "{{ website_proxyreverse }}"
{% else %}
    ProxyPassReverse / "{{ website_proxy }}"
{% endif %}{# website_proxyreverse is defined #}
{% endif %}{# website_proxy defined #}
{% endif %}{# website_httpsonly #}
    CustomLog ${APACHE_LOG_DIR}/${DOMAIN}-access.log combined
    ErrorLog ${APACHE_LOG_DIR}/${DOMAIN}-error.log
{% if website_custom_fragment is defined %}
    ## Custom Fragment ##
    {{ website_custom_fragment }}
{% endif %}{# website_custom_fragment is defined #}
</VirtualHost>

<IfModule mod_ssl.c>
    <VirtualHost *:443>
        ServerName ${DOMAIN}
        ServerAdmin  {{ website_serveradmin|default('webmaster@localhost') }}
{% if website_webalias is defined %}
        ServerAlias ${DOMAINALIAS}
{% endif %}{# website_webalias is defined #}
{% if website_rootredirection is defined %}
        RedirectMatch permanent ^(?!/\.well-known/acme-challenge/).* {{ website_rootredirection }}$0
{% else %}
        DocumentRoot {{ website_documentroot_base|default('/var/www/html') }}/${DOMAIN}
        <Directorymatch "^/.*/\.git+/">
          Order deny,allow
          Deny from all
        </Directorymatch>
        <Files ~ "^\.git">
          Order allow,deny
          Deny from all
        </Files>

{% endif %}{# website_rootredirection is defined #}
{% if website_scriptalias_url is defined %}
        ScriptAlias "/{{ website_scriptalias_url }}" "{{ website_documentroot_base|default('/var/www/html') }}/${DOMAIN}/{{ website_scriptalias_path|default(website_scriptalias_url) }}"
{% endif %}{# website_scriptalias_url is defined #}
        SSLEngine on
{% if website_letsencrypt|default(false) %}
        SSLCertificateFile    /etc/ssl/letsencrypt/certs/${DOMAIN}/fullchain.pem
        SSLCertificateKeyFile /etc/ssl/letsencrypt/certs/${DOMAIN}/privkey.pem
{% else %}
{% if website_cert is defined and website_cert %}
        SSLCertificateFile    /etc/ssl/certs/${DOMAIN}.crt
        SSLCertificateKeyFile /etc/ssl/private/{{ ansible_fqdn }}.key
{% else %}
        SSLCertificateFile    /etc/ssl/certs/ssl-cert-snakeoil.pem
        SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
{% endif %}{# website_cert is defined #}
{% endif %}{# website_letsencrypt #}

{% if website_proxy is defined %}
        ProxyRequests     Off
        ProxyPreserveHost On
        AllowEncodedSlashes {{ website_encoded_slashes }}
        <Proxy *>
          Order deny,allow
          Allow from all
        </Proxy>
        ProxyPass /.well-known !
        ProxyPass / "{{ website_proxy }}"
{% if website_proxyreverse is defined %}
        ProxyPassReverse / "{{ website_proxyreverse }}"
{% else %}
        ProxyPassReverse / "{{ website_proxy }}"
{% endif %}{# website_proxyreverse is defined #}
{% endif %}{# website_proxy defined #}
        CustomLog ${APACHE_LOG_DIR}/${DOMAIN}-access-ssl.log combined
        ErrorLog ${APACHE_LOG_DIR}/${DOMAIN}-error-ssl.log
{% if website_custom_fragment is defined %}
        ## Custom Fragment ##
        {{ website_custom_fragment }}
{% endif %}{# website_custom_fragment is defined #}
    </VirtualHost>
</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr
